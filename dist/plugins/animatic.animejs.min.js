/*
    AnimaticJS - JavaScript library for execution orchestration.

    Author: Andrei-George Hondrari
    E-mail: andrei.hondrari@gmail.com
    Website: https://andreihondrari.com
    Github: https://github.com/AndreiHondrari
    Created on: July 2019
*/


!function(e){"use strict";function l(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function i(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}function n(n,e,t){return e&&i(n.prototype,e),t&&i(n,t),n}function a(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&t(n,e)}function h(n){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function t(n,e){return(t=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function d(n,e){return!e||"object"!=typeof e&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}e=e&&e.hasOwnProperty("default")?e.default:e;var r=function(){function t(n){var e;return l(this,t),e=d(this,h(t).call(this)),n.autoplay=!1,e._animationInstance=anime(n),e}return a(t,e.AbstractAnimaticAdapterNode),n(t,[{key:"forward",value:function(n){this._animationInstance.finished.then(function(){n()}),this._animationInstance.direction="normal",this._animationInstance.play()}},{key:"pause",value:function(){this._animationInstance.pause()}},{key:"backward",value:function(n){var e=this;this._animationInstance.finished.then(function(){n()}),setTimeout(function(){e._animationInstance.direction="reverse",e._animationInstance.play()},0)}},{key:"adaptee",get:function(){return this._animationInstance}}]),t}(),o=function(){function f(n){var e;l(this,f),e=d(this,h(f).call(this));var t=n.opts||{},i=n.nodes||[];t.autoplay=!1,e._timelineInstance=anime.timeline(t);var a=!0,r=!1,o=void 0;try{for(var c,u=i[Symbol.iterator]();!(a=(c=u.next()).done);a=!0){var s=c.value;e._timelineInstance.add(s)}}catch(n){r=!0,o=n}finally{try{a||null==u.return||u.return()}finally{if(r)throw o}}return e}return a(f,e.AbstractAnimaticAdapterNode),n(f,[{key:"forward",value:function(n){this._timelineInstance.finished.then(function(){n()}),this._timelineInstance.direction="normal",this._timelineInstance.play()}},{key:"pause",value:function(){this._timelineInstance.pause()}},{key:"backward",value:function(n){this._timelineInstance.finished.then(function(){n()}),this._timelineInstance.direction="reverse",this._timelineInstance.play()}},{key:"adaptee",get:function(){return this._timelineInstance}}]),f}();e.AnimeAdapterNode=r,e.AnimeTimelineAdapterNode=o,e.animeNode=function(n){return e.node({handler:new r(n)})},e.animeTimelineNode=function(n){return e.node({handler:new o(n)})}}(Animatic);
